/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 static/models/scene.glb -k -t 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { MeshReflectorMaterial, useCamera, useGLTF, useTexture } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { prefix } from '../utility/environment';

type GLTFResult = GLTF & {
  nodes: {
    plant001: THREE.Mesh;
    Circle001: THREE.Mesh;
    NurbsPath006: THREE.Mesh;
    NurbsPath007: THREE.Mesh;
    NurbsPath008: THREE.Mesh;
    NurbsPath009: THREE.Mesh;
    NurbsPath010: THREE.Mesh;
    NurbsPath011: THREE.Mesh;
    Circle002: THREE.Mesh;
    Circle002_1: THREE.Mesh;
    Circle002_2: THREE.Mesh;
    Circle002_3: THREE.Mesh;
    Circle002_4: THREE.Mesh;
    Circle006: THREE.Mesh;
    Circle006_1: THREE.Mesh;
    FrontCameraRing001: THREE.Mesh;
    Circle: THREE.Mesh;
    Circle_1: THREE.Mesh;
    Circle_2: THREE.Mesh;
    KeyboardKeyHole: THREE.Mesh;
    RubberFoot: THREE.Mesh;
    Circle012: THREE.Mesh;
    Circle012_1: THREE.Mesh;
    Circle009: THREE.Mesh;
    Circle009_1: THREE.Mesh;
    Circle003: THREE.Mesh;
    Circle003_1: THREE.Mesh;
    Circle005: THREE.Mesh;
    Circle005_1: THREE.Mesh;
    Circle005_2: THREE.Mesh;
    Circle005_3: THREE.Mesh;
    Circle005_4: THREE.Mesh;
    Desk: THREE.Mesh;
    OfficeChair_1: THREE.Mesh;
    OfficeChair_2: THREE.Mesh;
    OfficeChair_3: THREE.Mesh;
    Plane_1: THREE.Mesh;
    Plane_2: THREE.Mesh;
    Plane_3: THREE.Mesh;
    rubber_duck_toy: THREE.Mesh;
    Glass: THREE.Mesh;
  };
  materials: {
    ['Material.028']: THREE.MeshStandardMaterial;
    ['Material.030']: THREE.MeshStandardMaterial;
    ['Material.007']: THREE.MeshStandardMaterial;
    ['Material.006']: THREE.MeshStandardMaterial;
    ['Material.005']: THREE.MeshStandardMaterial;
    ['Material.004']: THREE.MeshStandardMaterial;
    ['Material.003']: THREE.MeshStandardMaterial;
    ['Material.002']: THREE.MeshStandardMaterial;
    ['Frame.001']: THREE.MeshStandardMaterial;
    HeadPhoneHole: THREE.MeshStandardMaterial;
    USB_C_INSIDE: THREE.MeshStandardMaterial;
    TouchbarBorder: THREE.MeshStandardMaterial;
    Keyboard: THREE.MeshStandardMaterial;
    ['CameraRIngBlack.002']: THREE.MeshStandardMaterial;
    ['Keyboard.001']: THREE.MeshStandardMaterial;
    Key: THREE.MeshStandardMaterial;
    Touchbar: THREE.MeshStandardMaterial;
    DarkRubber: THREE.MeshStandardMaterial;
    HingeBlack: THREE.MeshStandardMaterial;
    HingeMetal: THREE.MeshStandardMaterial;
    SpeakerHole: THREE.MeshStandardMaterial;
    ['Frame.002']: THREE.MeshStandardMaterial;
    Screen: THREE.MeshStandardMaterial;
    ScreenGlass: THREE.MeshStandardMaterial;
    Rubber: THREE.MeshStandardMaterial;
    DisplayGlass: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
    Grey: THREE.MeshStandardMaterial;
    Black: THREE.MeshStandardMaterial;
    Chair: THREE.MeshStandardMaterial;
    Glass: THREE.MeshStandardMaterial;
    Default: THREE.MeshStandardMaterial;
    Floor: THREE.MeshStandardMaterial;
    rubber_duck_toy: THREE.MeshStandardMaterial;
  };
  animations: any; // GLTFAction[]
};

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>;

const Office = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF(prefix + '/models/scene.glb') as GLTFResult;

  const texture = useTexture(prefix + '/textures/baked.jpg');
  texture.flipY = false;
  texture.colorSpace = THREE.SRGBColorSpace;

  const textureMaterial = new THREE.MeshStandardMaterial({
    map: texture,
    roughness: 1,
    metalness: 0,
  });

  const textureGlassMaterial = new THREE.MeshStandardMaterial({
    map: texture,
    transparent: true,
    opacity: 0.4,
  });

  // material=\{[^}]+\}

  return (
    <group {...props} dispose={null}>
      <mesh
        name="plant001"
        geometry={nodes.plant001.geometry}
        material={textureMaterial}
        position={[1.213, 0.107, -1.665]}
        rotation={[-Math.PI, 0.08, -Math.PI]}
      >
        <mesh name="Circle001" geometry={nodes.Circle001.geometry} material={textureMaterial} />
        <mesh name="NurbsPath006" geometry={nodes.NurbsPath006.geometry} material={textureMaterial} />
        <mesh name="NurbsPath007" geometry={nodes.NurbsPath007.geometry} material={textureMaterial} />
        <mesh name="NurbsPath008" geometry={nodes.NurbsPath008.geometry} material={textureMaterial} />
        <mesh name="NurbsPath009" geometry={nodes.NurbsPath009.geometry} material={textureMaterial} />
        <mesh name="NurbsPath010" geometry={nodes.NurbsPath010.geometry} material={textureMaterial} />
        <mesh name="NurbsPath011" geometry={nodes.NurbsPath011.geometry} material={textureMaterial} />
      </mesh>
      <group name="Macbook" position={[0.031, 0.735, -1.559]}>
        <mesh name="Circle002" geometry={nodes.Circle002.geometry} material={textureMaterial} />
        <mesh name="Circle002_1" geometry={nodes.Circle002_1.geometry} material={textureMaterial} />
        <mesh name="Circle002_2" geometry={nodes.Circle002_2.geometry} material={textureMaterial} />
        <mesh name="Circle002_3" geometry={nodes.Circle002_3.geometry} material={textureMaterial} />
        <mesh name="Circle002_4" geometry={nodes.Circle002_4.geometry} material={textureMaterial} />
        <group name="Bottom" position={[0, -0.009, 0]}>
          <mesh name="Circle006" geometry={nodes.Circle006.geometry} material={textureMaterial} />
          <mesh name="Circle006_1" geometry={nodes.Circle006_1.geometry} material={textureMaterial} />
        </group>
        <mesh
          name="FrontCameraRing001"
          geometry={nodes.FrontCameraRing001.geometry}
          material={textureMaterial}
          position={[-0.003, 0.364, -0.3]}
        />
        <group name="Keyboard" position={[-0.219, -0.003, -0.154]}>
          <mesh name="Circle" geometry={nodes.Circle.geometry} material={textureMaterial} />
          <mesh name="Circle_1" geometry={nodes.Circle_1.geometry} material={textureMaterial} />
          <mesh name="Circle_2" geometry={nodes.Circle_2.geometry} material={textureMaterial} />
        </group>
        <mesh
          name="KeyboardKeyHole"
          geometry={nodes.KeyboardKeyHole.geometry}
          material={textureMaterial}
          position={[-0.219, -0.003, -0.154]}
        />
        <mesh
          name="RubberFoot"
          geometry={nodes.RubberFoot.geometry}
          material={textureMaterial}
          position={[-0.222, -0.014, 0.146]}
        />
        <group name="ScreenHinge" position={[0, -0.004, -0.196]}>
          <mesh name="Circle012" geometry={nodes.Circle012.geometry} material={textureMaterial} />
          <mesh name="Circle012_1" geometry={nodes.Circle012_1.geometry} material={textureMaterial} />
        </group>
        <group name="SpeakerLeft" position={[-0.279, 0.001, 0.011]}>
          <mesh name="Circle009" geometry={nodes.Circle009.geometry} material={textureMaterial} />
          <mesh name="Circle009_1" geometry={nodes.Circle009_1.geometry} material={textureMaterial} />
        </group>
        <group name="SpeakerRight" position={[0.227, 0.001, 0.011]}>
          <mesh name="Circle003" geometry={nodes.Circle003.geometry} material={textureMaterial} />
          <mesh name="Circle003_1" geometry={nodes.Circle003_1.geometry} material={textureMaterial} />
        </group>
        <group name="Top" position={[0, -0.009, -0.193]} rotation={[1.311, 0, 0]}>
          <mesh name="Circle005" geometry={nodes.Circle005.geometry} material={textureMaterial} />
          <mesh name="Circle005_1" geometry={nodes.Circle005_1.geometry} material={textureMaterial} />
          <mesh name="Circle005_2" geometry={nodes.Circle005_2.geometry} material={textureMaterial} />
          <mesh name="Circle005_3" geometry={nodes.Circle005_3.geometry} material={textureMaterial} />
          <mesh name="Circle005_4" geometry={nodes.Circle005_4.geometry} material={textureGlassMaterial}>
            <MeshReflectorMaterial
              blur={[0, 0]} // Blur ground reflections (width, height), 0 skips blur
              mixBlur={0.2} // How much blur mixes with surface roughness (default = 1)
              mixStrength={0.4} // Strength of the reflections
              mixContrast={1} // Contrast of the reflections
              resolution={256} // Off-buffer resolution, lower=faster, higher=better quality, slower
              mirror={1} // Mirror environment, 0 = texture colors, 1 = pick up env colors
              depthScale={0} // Scale the depth factor (0 = no depth, default = 0)
              minDepthThreshold={0.9} // Lower edge for the depthTexture interpolation (default = 0)
              maxDepthThreshold={1} // Upper edge for the depthTexture interpolation (default = 0)
              depthToBlurRatioBias={0.25} // Adds a bias factor to the depthTexture before calculating the blur amount [blurFactor = blurTexture * (depthTexture + bias)]. It accepts values between 0 and 1, default is 0.25. An amount > 0 of bias makes sure that the blurTexture is not too sharp because of the multiplication with the depthTexture
              distortion={1} // Amount of distortion based on the distortionMap texture
              reflectorOffset={0.2} // Offsets the virtual camera that projects the reflection. Useful when the reflective surface is some distance from the object's origin (default = 0)
              transparent={true}
              opacity={0.8}
            />
          </mesh>
        </group>
      </group>
      <mesh name="Desk" geometry={nodes.Desk.geometry} material={textureMaterial} position={[-0.618, 0, -1.677]} />
      <group name="OfficeChair" position={[-0.303, 0, -0.492]} rotation={[-Math.PI / 2, 0, 2.239]}>
        <mesh name="OfficeChair_1" geometry={nodes.OfficeChair_1.geometry} material={textureMaterial} />
        <mesh name="OfficeChair_2" geometry={nodes.OfficeChair_2.geometry} material={textureMaterial} />
        <mesh name="OfficeChair_3" geometry={nodes.OfficeChair_3.geometry} material={textureMaterial} />
      </group>
      <mesh
        name="rubber_duck_toy"
        geometry={nodes.rubber_duck_toy.geometry}
        material={textureMaterial}
        position={[0, 0, -0.344]}
      />
      <mesh
        name="Glass"
        geometry={nodes.Glass.geometry}
        material={textureGlassMaterial}
        position={[-2.119, 1.346, -0.663]}
        scale={[0.068, 0.324, 0.63]}
      />
      <mesh name="Plane_1" geometry={nodes.Plane_1.geometry} material={textureMaterial} />
      <mesh name="Plane_2" geometry={nodes.Plane_2.geometry} material={textureMaterial} />
      <mesh name="Plane_3" geometry={nodes.Plane_3.geometry} material={textureMaterial} />
    </group>
  );
};

useGLTF.preload(prefix + '/models/scene.glb');

export default Office;

